version: 1.0.0

environmentFolderPath: ./env

provision:
  - uses: teamsApp/create # Creates a Teams app
    with:
      name: live-share-dice-roller-${{TEAMSFX_ENV}} # Teams app name
    # Output: following environment variable will be persisted in current environment's .env file.
    # TEAMS_APP_ID: the id of Teams app
    writeToEnvironmentFile: # Write the information of created resources into environment file for the specified environment variable(s).
      teamsAppId: TEAMS_APP_ID

  - uses: file/updateEnv # Generate env to .env file
    with:
      envs:
        TAB_DOMAIN: localhost:3000
        TAB_ENDPOINT: https://localhost:3000
  - uses: teamsApp/validate
    with:
      manifestPath: ./manifest/manifest.json # Path to manifest template
  - uses: teamsApp/zipAppPackage # Build Teams app package with latest env value
    with:
      manifestPath: ./manifest/manifest.json # Path to manifest template
      outputZipPath: ./build/manifest/appPackage.${{TEAMSFX_ENV}}.zip
      outputJsonPath: ./build/manifest/manifest.${{TEAMSFX_ENV}}.json
  - uses: teamsApp/update # Apply the Teams app manifest to an existing Teams app in Teams Developer Portal. Will use the app id in manifest file to determine which Teams app to update.
    with:
      appPackagePath: ./build/manifest/appPackage.${{TEAMSFX_ENV}}.zip # Relative path to this file. This is the path for built zip file.
    # Output: following environment variable will be persisted in current environment's .env file.
    # TEAMS_APP_ID: the id of Teams app

deploy:
  - uses: prerequisite/install # Install dependencies
    with:
      devCert:
        trust: true
    # Output: following environment variable will be persisted in current environment's .env file.
    # SSL_CRT_FILE: certificate file
    # SSL_KEY_FILE: certificate key

  - uses: cli/runNpmCommand # Run npm command
    with:
      args: install --no-audit
      
  - uses: cli/runNpmCommand # Run npm command
    with:
      args: run build

  - uses: file/updateEnv # Generate runtime environment variables
    with:
      target: ./.localSettings
      envs:
        BROWSER: none
        HTTPS: true
        PORT: 3000
        SSL_CRT_FILE: ${{SSL_CRT_FILE}}
        SSL_KEY_FILE: ${{SSL_KEY_FILE}}